Final Notes & Countermeasures
Don't Break Your Shell

This is a Shell NOT Terminal! We explained earlier that creating a shell is done via creating a subprocess then we pass the received argument into cmd.exe process.

Some commands are designed to work on a terminal but not for shell since the shell will fail to handle the output properly.

For instance, cls and clear are commands which will clear a terminal screen; the shell will fail to handle those types of commands also, any interactive commands, will not work in shell such as telnet.



AntiVirus -- Be creative!

The war between anti-virus(signature based and heuristic) and malware is like a mouse and cat game. If your script is anti-virus free in the morning, it might not be in the afternoon.

-IF the anti-virus (signature based) was able to catch the EXE even before opening it. Then you need to change the packaging method as that would change the signature of the exported EXE . For example Pyinstaller uses UPX to compress the size of the EXE output. But also many Malwre does use UPX as well.

So it's worth to try with  --noupx   Do not use UPX

Or even other software to export into EXE

-IF the anti-virus (heuristic based) did catch your exe after opening it. Then this means you need to change the structure or the order of your source code.  Just change the pattern or the behavior of how your code actually works. For example try to-

-Add some random delay

-Add some random operations like create a text file, append random text and then delete the file.

-Change the order of doing things

-Offload some operationscommands to subprocess



Countermeasures

-Securing the human from social engineering attacks. Not only boring slides and sessions, show them how the attacks happen on a high level (without explaining the coding part). People forget, do these sessions on regular basis with enforcement from C-Level managers (CTO or CISO).

-Never blindly rely on Anti-Virus Sandbox Vmware to test an EXE. There are many ways to evade them.

-Never use crack files, most likely it came embedded with backdoor!

-Never trust any exescript unless you are 100% about the source. Use md5SHA checksum to double check.

-Install Host-Based Intrusion Detection System (HIDS) on all your endpoints, SOC analysts should actively raise a flag on any suspicious activities.

-If possible, limit what processes are allowed to run based on your business needs.

-Report any suspicious emails, files or behaviors immediately.